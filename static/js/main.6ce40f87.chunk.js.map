{"version":3,"sources":["App.js","index.js"],"names":["App","useState","value","setValue","query","setQuery","tickerTweets","setTickerTweets","isError","setIsError","isDuplicate","setIsDuplicate","fetchData","tick","a","Axios","result","tweets","data","messages","useEffect","interval","setInterval","Object","keys","forEach","key","clearInterval","className","onSubmit","e","preventDefault","type","onChange","target","toUpperCase","placeholder","map","index","onClick","newTickerTweets","removeTicker","tw","ind","body","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUA+FeA,MA1Ff,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGaF,mBAAS,IAHtB,mBAGNG,EAHM,KAGCC,EAHD,OAI2BJ,mBAAS,IAJpC,mBAINK,EAJM,KAIQC,EAJR,OAYiBN,oBAAS,GAZ1B,mBAYNO,EAZM,KAYGC,EAZH,OAayBR,oBAAS,GAblC,mBAaNS,EAbM,KAaOC,EAbP,KAePC,EAAS,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,yDACXD,EADW,wDAEhBJ,GAAW,GAFK,kBAIOM,IAAM,uFAAD,OAC+DF,EAD/D,UAJZ,OAIRG,EAJQ,OAORC,EAAOD,EAAOE,KAAKC,SACzBZ,EAAgB,2BAAID,GAAL,kBAAoBO,EAAOI,KAR5B,kDAUdR,GAAW,GAVG,0DAAH,sDA0Bf,OAZAW,qBAAU,WAAQR,EAAUR,KAAU,CAACA,IAEvCgB,qBAAU,WACR,IAAMC,EAAWC,aACf,WACEC,OAAOC,KAAKlB,GAAcmB,SAAS,SAAAC,GAAG,OACxCd,EAAUc,QACN,KAEN,OAAO,kBAAMC,cAAcN,OAK3B,yBAAKO,UAAU,OACb,4CACA,0BAAMC,SAAW,SAACC,GACZA,EAAEC,iBACG7B,IACDA,KAASI,EACXK,GAAe,IAGjBN,EAASH,GACTC,EAAS,QAEb,2BACA6B,KAAK,OACL9B,MAAOA,EACP+B,SAAW,SAAAH,GACTnB,GAAe,GACfF,GAAW,GACXN,EAAS2B,EAAEI,OAAOhC,MAAMiC,gBAE1BC,YAAY,8BACZ,4BAAQJ,KAAK,UAAb,OACAxB,GAAW,yBAAKoB,UAAU,gBAAf,uBACXlB,GAAe,yBAAKkB,UAAU,gBAAf,yCAEjB,yBAAKA,UAAU,WACXL,OAAOC,KAAKlB,GAAc+B,KAAK,SAACX,EAAKY,GAAN,OACjC,yBAAKZ,IAAKY,GACV,yBAAKV,UAAU,oBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eAAeF,GAC9B,4BAAQa,QAAU,YApEP,SAAAb,GACnB,IAAMc,EAAe,eAAOlC,UACrBkC,EAAgBd,GACvBnB,EAAgBiC,GAiEkBC,CAAaf,KAAvC,MAEF,yBAAKE,UAAU,oBACZtB,EAAaoB,GAAKW,KAAK,SAACK,EAAIC,GAAL,OACtB,yBAAKjB,IAAKiB,EAAKf,UAAU,SAASc,EAAGE,WAI3C,yBAAKhB,UAAU,cAActB,EAAaoB,GAAKmB,eClFvDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.6ce40f87.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Axios from 'axios';\n\n\nfunction App() {\n  \n  const [value, setValue] = useState('');\n  const [query, setQuery] = useState('');\n  const [tickerTweets, setTickerTweets] = useState({})\n\n  const removeTicker = key => {\n    const newTickerTweets = {...tickerTweets};\n    delete newTickerTweets[key];\n    setTickerTweets(newTickerTweets);\n  }\n\n  const [isError, setIsError] = useState(false);\n  const [isDuplicate, setIsDuplicate] = useState(false);\n\n  const fetchData = async (tick) => {\n    if (!tick) return;\n    setIsError(false);\n    try {\n      const result = await Axios(\n        `https://cors-anywhere.herokuapp.com/https://api.stocktwits.com/api/2/streams/symbol/${tick}.json`\n      );\n      const tweets=result.data.messages;\n      setTickerTweets({...tickerTweets, [tick]: tweets });\n    } catch (error) {\n      setIsError(true);\n    }\n  }\n\n  useEffect(() => { fetchData(query) }, [query] )\n\n  useEffect(() => {\n    const interval = setInterval(\n      () => {\n        Object.keys(tickerTweets).forEach( key => \n      fetchData(key)\n      )}, 5000\n    );\n    return () => clearInterval(interval);\n  });\n\n  return (\n\n    <div className=\"App\">\n      <h1>Stock Tweets</h1>\n      <form onSubmit={ (e) => {\n            e.preventDefault();\n            if (!value) return;\n            if (value in tickerTweets) {\n              setIsDuplicate(true);\n              return\n            } ;\n            setQuery(value);\n            setValue(''); \n          }}>\n        <input \n        type=\"text\" \n        value={value} \n        onChange={ e => {\n          setIsDuplicate(false);\n          setIsError(false);\n          setValue(e.target.value.toUpperCase()) }\n        }\n        placeholder=\"Enter a symbol, e.g. MSFT\"/>\n        <button type=\"submit\">Add</button>\n      { isError && <div className='notification'>Ticker wasn't found</div>}\n      { isDuplicate && <div className='notification'>You're already following this ticker</div>}\n      </form>\n      <div className=\"tickers\">\n        { Object.keys(tickerTweets).map( (key, index) =>\n        <div key={index}>\n        <div className='ticker-container'>\n          <div className=\"ticker-info\">\n            <div className=\"ticker-name\">{key}</div>\n            <button onClick={ () => { removeTicker(key) } }>x</button>\n          </div>\n          <div className=\"tweets-container\">\n            {tickerTweets[key].map( (tw, ind) => \n              <div key={ind} className=\"tweet\">{tw.body}</div>\n            )}\n          </div>\n        </div>\n        <div className=\"tweetCount\">{tickerTweets[key].length}</div>\n        </div>) \n          } \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}